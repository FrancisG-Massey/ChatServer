<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<project default="all" basedir=".">
	<property name="name" value="ChatServer" />
	<property name="version" value="1.0" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="build.classes" value="${build.dir}/classes" />
	<property name="build.lib" value="${build.dir}/lib" />
	<property name="build.docs" value="${build.dir}/docs" />
	<property name="build.docs.api" value="${build.docs}/api" />
	<property name="lib.dir" value="WebContent/WEB-INF/lib" />
	<property name="qa.dir" value="${build.dir}/qa-reports" />
	<property name="test.result.dir" value="${qa.dir}/tests" />
	<property name="test.dir" value="test" />
	
	<path id="build.classpath">
		<fileset dir="/usr/share/tomcat7/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${qa.dir}" />
		<delete dir="${test.result.dir}"/>
		<mkdir dir="${test.result.dir}" />
	</target>
	
	<target name="compile" depends="prepare" description="Compile the whole project">
		<javac destdir="${build.classes}" debug="${debug}" deprecation="on" optimize="off" srcdir="${src.dir}" classpathref="build.classpath" includes="com/sundays/chat/**/*.java" />
		<copy todir="${build.classes}">
			<fileset dir="${src.dir}" includes="**/*.properties" />
		</copy>
	</target>

	<target name="all" description="Main target - compile, jar, docs and test" depends="tests,dependencyanalysis,javadocs">
		<echo>Build finished!</echo>
	</target>
	
	<target name="javadocs" depends="prepare" description="Creates the API documentation">
		<delete dir="${build.docs.api}" />
		<mkdir dir="${build.docs.api}" />
		<javadoc packagenames="com.sundays.chat.*" sourcepath="${src.dir}" destdir="${build.docs.api}" public="true" author="true" version="true" use="false" windowtitle="${name} ${version}" classpathref="build.classpath">
			<!-- Attach links to library documentation -->
			<link href="http://docs.oracle.com/javase/7/docs/api/" />
			<link href="http://docs.guava-libraries.googlecode.com/git/javadoc/" />
		</javadoc>
	</target>
	
	<target name="dependencyanalysis" depends="compile" description="Dependency ananlysis with JDepend">
		<jdepend format="xml" outputfile="${qa.dir}/jdepend-report.xml">
			<exclude name="java.*" />
			<exclude name="javax.*" />
			<exclude name="junit.*" />
			<exclude name="org.junit.*" />
			<exclude name="test.*" />
			<exclude name="*.package-info.class" />
			<classespath>
				<pathelement location="${build.classes}" />
			</classespath>
		</jdepend>
		<xslt basedir="${qa.dir}" destdir="${qa.dir}" includes="jdepend-report.xml" style="${ant.home}/etc/jdepend.xsl" />
	</target>
	
	<target name="tests" depends="compile" description="Tests the project">
		<junit printsummary="yes" haltonfailure="no">
		  	<classpath>
		  	    <pathelement location="${build.classes}"/>
		  	    <pathelement path="${java.class.path}" />
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>	
  			</classpath>			
  			<formatter type="xml"/>
  			<batchtest todir="${test.result.dir}">
			    <fileset dir="${build.classes}">
         			<include name="**/*Test.class"/>
         			<exclude name="**/package-info.class"/>
      			</fileset>
   			</batchtest>
		</junit>
	   	<junitreport todir="${qa.dir}">
	   	    <fileset dir="${test.result.dir}">
	   	        <include name="*.xml"/>
	   	    </fileset>
	   	    <report todir="${qa.dir}" styledir="resources/junitreport" format="noframes">
	   	    </report>
	   	</junitreport>
   </target>
</project>
